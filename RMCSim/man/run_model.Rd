% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_model.R
\name{run_model}
\alias{run_model}
\title{This function runs a model that is defined using DLL and "_inits.R" files
based on translation of an MCSim model (".model") file. The model must first
be compiled (using the function "compile_model") and loaded into the R
workspace (using the function "load_model").}
\usage{
run_model(
  mName,
  times,
  Y0 = NULL,
  parms = NULL,
  rtol = 1e-06,
  atol = 1e-06,
  forcing = NULL,
  fcontrol = NULL,
  event_list = NULL
)
}
\description{
Inputs:
mName: String containing the name of the MCSim model. Exclude the file name
suffix ".model". If the function is called from a working directory other
than the one containing the ".model" file, the full path of the ".model"
file should be provided.
}
\details{
times: Vector containing the times for which the model simulation results
are desired. This vector should contain a minimum of two values (an initial
time and an end time.

Y0: Vector containing the initial values of the state variables in the
model. If this argument is NULL, the default initial values of the state
variables (as returned by the function "initStates") will be used.

parms: Vector containing the values of the model parameters. If this
argument is NULL, the default values of the parameters (as returned by the
function "initParms") will be used.

r_tol: Relative error tolerance. See the documentation for the R package
"deSolve".

a_tol: Absolute error tolerance. See the documentation for the R package
"deSolve".

forcing: List containing values of input variables to be passed to the ODE
solver. See the documentation for the R package "deSolve".

fcontrol: List containing arguments that describe how interpolations of the
forcing functions should be performed. See the documentation for the R
package "deSolve".

event_list: List containing events to be passed to the ODE solver. See
the documentation for the R package deSolve.

Returns:
out: Dataframe containing values of all state variables (named in the
argument "Y0") and all output variables (named in the global environment
variable "Outputs") at all times (defined in the argument "times").
}
